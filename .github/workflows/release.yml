name: release
on:
  push:
    tags:
      - '*'

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '14.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - name: Get packages
        run: flutter pub get

      - name: Run Tests
        run: flutter test

      - name: Build APKs
        run: flutter build apk --build-number $(printf '%(%Y%m%d)T\n' -1)

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: ./build/app/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: key
          keyStorePassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive